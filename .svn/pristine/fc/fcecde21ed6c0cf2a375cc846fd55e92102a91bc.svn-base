<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidisoft.accumulation_fund.dao.AccumulationFundDao">
  <resultMap id="BaseResultMap" type="com.zhidisoft.accumulation_fund.entity.AccumulationFund">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="idCard" jdbcType="VARCHAR" property="idcard" />
    <result column="accountNo" jdbcType="VARCHAR" property="accountno" />
    <result column="payDate" jdbcType="VARCHAR" property="paydate" />
    <result column="payMoney" jdbcType="DOUBLE" property="paymoney" />
    <result column="proxyFee" jdbcType="DOUBLE" property="proxyfee" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateby" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_accumulation_fund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhidisoft.accumulation_fund.entity.AccumulationFund">
    insert into tb_accumulation_fund (id, idCard, accountNo, 
      payDate, payMoney, proxyFee, 
      status, createBy, createTime, 
      updateBy, updateTime, remark
      )
    values (#{id,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{accountno,jdbcType=VARCHAR}, 
      #{paydate,jdbcType=VARCHAR}, #{paymoney,jdbcType=DOUBLE}, #{proxyfee,jdbcType=DOUBLE}, 
      #{status,jdbcType=VARCHAR}, #{createby,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updateby,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhidisoft.accumulation_fund.entity.AccumulationFund">
    update tb_accumulation_fund
    set idCard = #{idcard,jdbcType=VARCHAR},
      accountNo = #{accountno,jdbcType=VARCHAR},
      payDate = #{paydate,jdbcType=VARCHAR},
      payMoney = #{paymoney,jdbcType=DOUBLE},
      proxyFee = #{proxyfee,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      createBy = #{createby,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateBy = #{updateby,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, idCard, accountNo, payDate, payMoney, proxyFee, status, createBy, createTime, 
    updateBy, updateTime, remark
    from tb_accumulation_fund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, idCard, accountNo, payDate, payMoney, proxyFee, status, createBy, createTime, 
    updateBy, updateTime, remark
    from tb_accumulation_fund
  </select>
  
   <sql id="pageComm">
		<where>
			<if test="condition != null">
			     <if test="condition.idCard!=null and condition.idCard!=''">
	                idCard like concat("%",#{condition.idCard},"%")
	            </if>
	      
	            <if test="condition.accountNo!=null and condition.accountNo!=''">
	                and phone like concat("%",#{condition.accountNo},"%")
	            </if>
			</if>
		</where>
	</sql>
	
	
  <!--查询总记录数  -->
  <select id="count" resultType="java.lang.Integer">
    select count(id) from tb_accumulation_fund
    <include refid="pageComm"/>
  </select>
  
  
  <resultMap type="com.zhidisoft.accumulation_fund.entity.AccumulationFund" id="pageResultMap" extends="BaseResultMap">
  	<collection property="customer" select="com.zhidisoft.accumulation_fund.dao.CustomerDao.selectByIdCard" column="idcard">
  		
  	</collection>
  </resultMap>
  
  <select id="findByPage" resultMap="pageResultMap" >
    select  id, idCard, accountNo, payDate, payMoney, proxyFee, status, createBy, createTime, 
    updateBy, updateTime, remark
    from tb_accumulation_fund 
     <include refid="pageComm"/>
    limit #{offset},#{pageSize}
	  
  </select>
</mapper>