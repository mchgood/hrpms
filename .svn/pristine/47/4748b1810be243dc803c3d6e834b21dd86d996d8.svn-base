<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidisoft.system.dao.EmailTemplateDao">
  <resultMap id="BaseResultMap" type="com.zhidisoft.system.entity.EmailTemplate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateby" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_email_template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhidisoft.system.entity.EmailTemplate" useGeneratedKeys="true" keyProperty="id">
    insert into tb_email_template (id, subject, content, 
      order_id, createTime, createBy, 
      updateTime, updateBy)
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{createby,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhidisoft.system.entity.EmailTemplate">
    update tb_email_template
    set subject = #{subject,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      createBy = #{createby,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updateBy = #{updateby,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, subject, content, order_id, createTime, createBy, updateTime, updateBy
    from tb_email_template
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, subject, content, order_id, createTime, createBy, updateTime, updateBy
    from tb_email_template
  </select>
  
  <!-- 分页开始 -->
    <sql id="pageComm">
      <where>
            <if test="condition != null">
                 <if test="condition.subject!=null and condition.subject!=''">
                    and subject like concat("%",#{condition.subject},"%")
                </if>
            </if>
        </where>
    </sql>
    
  <select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
    select * from(select id, subject, content, order_id, createTime, createBy, updateTime, updateBy
    from tb_email_template
   <include refid="pageComm"/> ORDER BY order_id DESC) as total LIMIT #{offset},#{pageSize}
  </select>
  
  <select id="count" parameterType="Map" resultType="java.lang.Integer">
    select count(id)
    from tb_email_template
    <include refid="pageComm"/>
  </select>
  <!-- 分页结束 -->
</mapper>