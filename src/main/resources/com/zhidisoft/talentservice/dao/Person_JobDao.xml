<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidisoft.talentservice.dao.Person_JobDao">
  <resultMap id="BaseResultMap" type="com.zhidisoft.talentservice.entity.Person_Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="idCard" jdbcType="VARCHAR" property="idcard" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="jobType" jdbcType="VARCHAR" property="jobtype" />
    <result column="companyPrice" jdbcType="DOUBLE" property="companyprice" />
    <result column="personPrice" jdbcType="DOUBLE" property="personprice" />
    <result column="jobContent" jdbcType="VARCHAR" property="jobcontent" />
    <result column="startTime" jdbcType="DATE" property="starttime" />
    <result column="endTime" jdbcType="DATE" property="endtime" />
    <result column="contractURL" jdbcType="VARCHAR" property="contracturl" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateby" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_person_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhidisoft.talentservice.entity.Person_Job">
    insert into tb_person_job (id, idCard, companyId, 
      jobType, companyPrice, personPrice, 
      jobContent, startTime, endTime, 
      contractURL, status, createBy, 
      createTime, updateBy, updateTime, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{companyid,jdbcType=INTEGER}, 
      #{jobtype,jdbcType=VARCHAR}, #{companyprice,jdbcType=DOUBLE}, #{personprice,jdbcType=DOUBLE}, 
      #{jobcontent,jdbcType=VARCHAR}, #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, 
      #{contracturl,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createby,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhidisoft.talentservice.entity.Person_Job">
    update tb_person_job
    set idCard = #{idcard,jdbcType=VARCHAR},
      companyId = #{companyid,jdbcType=INTEGER},
      jobType = #{jobtype,jdbcType=VARCHAR},
      companyPrice = #{companyprice,jdbcType=DOUBLE},
      personPrice = #{personprice,jdbcType=DOUBLE},
      jobContent = #{jobcontent,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=DATE},
      endTime = #{endtime,jdbcType=DATE},
      contractURL = #{contracturl,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createBy = #{createby,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateBy = #{updateby,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateById" parameterType="java.lang.Integer">
    update tb_person_job
    set status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, idCard, companyId, jobType, companyPrice, personPrice, jobContent, startTime, 
    endTime, contractURL, status, createBy, createTime, updateBy, updateTime, remark
    from tb_person_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, idCard, companyId, jobType, companyPrice, personPrice, jobContent, startTime, 
    endTime, contractURL, status, createBy, createTime, updateBy, updateTime, remark
    from tb_person_job
  </select>
  
   <!-- 不支持 condition.idcard!=' '  -->
  <sql id="pageComm">
  	<where>
  		<if test="condition!=null">
  			<if test="condition.name!=null and condition.name.length()>0 ">
  				customer.name like concat("%",#{condition.name},"%") 			
  			</if>
  		
	  		<if test="condition.idcard!=null and condition.idcard.length()>0 ">
	  			and p.idCard like concat("%",#{condition.idcard},"%") 			
			</if>
			<if test="condition.companyid!=null  and condition.companyid != 1">
				and company.id like concat("%",#{condition.companyid,jdbcType=INTEGER},"%") 			
			</if>
			
  		</if>
  		and p.idCard = customer.idCard and p.status=0 and p.companyId=company.id
  	</where>
  </sql>
  
   <!--查询总记录数  -->
  <select id="count" resultType="java.lang.Integer"  parameterType="Map">
    select count(p.id) from tb_person_job as p,tb_customer as customer , tb_company as company 
   <include refid="pageComm"/>
  </select>
  
  <select id="findByPage" resultMap="BaseResultMap"  parameterType="Map">
  	select customer.name, p.id, p.idCard, p.companyId, p.jobType, p.companyPrice, p.personPrice, p.jobContent, p.startTime, 
    p.endTime, p.contractURL, p.status, p.createBy, p.createTime, p.updateBy, p.updateTime, p.remark,company.name as companyName
    from tb_person_job p,tb_customer as customer,tb_company as company
  	 <include refid="pageComm"/>
  	limit #{offset},#{pageSize}
  </select>
  
</mapper>